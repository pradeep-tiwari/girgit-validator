{
  "name": "Girgit-validator",
  "tagline": "Standalone, lightweight and easy-to-use PHP validation library.",
  "body": "# girgit-validator\r\nStandalone, lightweight and easy-to-use PHP validation library.\r\n\r\n### What?\r\nForm validation is an integral part of a PHP project. If you are not using a full-fledged framework like Laravel or Codeigniter, you know what a pain it is. Girgit-Validator caters to most of your form validation pain-points.\r\n\r\n### Why use it?\r\nIf any of the following reasons are valid in your case:\r\n- You are not using a full-fledged framework\r\n- You do not want to maintain your own validations\r\n- Your project requires few basic to advanced validations\r\n- You wish to start using a lightweight library within no time\r\n- You are interested in learning some of the magic that few big frameworks or libraries perform behind the scenes\r\n\r\n### Requirements\r\nThis library has been tested with PHP version 5.6 & 7. It relies on PSR-4 standards based composer autloader.\r\n\r\n### License\r\nMIT, free software, use at your own risks :)\r\nNo way the author of this library is liable for any damages caused to your system.\r\n\r\n### How to use it?\r\n4 easy steps:\r\n- Require vendor/autload.php\r\n- Create a validator instance with the datasource e.g. $_POST\r\n- Define set of rules\r\n- Run the validator\r\n\r\nIts that simple. Please go through the sample example files in the /examples directory.\r\n\r\n### Limitations\r\nIt does not support nested or deep multi-dimensional array based validations because generally in most cases, this is not what you require.\r\n\r\n### To Do\r\n- Write unit-tests\r\n- Document strategy classes\r\n- Add more strategies\r\n- Explore edge cases\r\n- and much more yet..\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}